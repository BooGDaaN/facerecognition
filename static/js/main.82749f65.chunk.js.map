{"version":3,"sources":["components/Logo/Logo.jsx","components/Navigation/Navigation.jsx","components/SignIn/SignIn.jsx","components/Register/Register.jsx","components/Rank/Rank.jsx","components/ImageLinkForm/ImageLinkForm.jsx","components/FaceRecognition/FaceRecognition.jsx","App.js","serviceWorker.js","index.js","components/Logo/emoji.png"],"names":["Logo","className","options","max","style","height","width","src","logoImg","alt","paddingTop","Navigation","onRouteChange","isSignedIn","onClick","Fragment","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","defaultValue","React","Component","Register","onNameChange","registerName","registerEmail","registerPassword","onSubmitRegister","onKeyPress","handlePressEnter","Rank","entries","ImageLinkForm","onInputChange","onPhotoSubmit","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesParams","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.82749f65.chunk.js","sourcesContent":["import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport logoImg from './emoji.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 45 }} style={{ height: 100, width: 100 }} >\r\n                <div className=\"Tilt-inner pa3\">\r\n                    <img src={logoImg} alt=\"logo\" style={{paddingTop: '5px'}}/>\r\n                </div>\r\n            </Tilt>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Navigation.css'\r\nimport Logo from \"../Logo/Logo\";\r\n\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if (isSignedIn){\r\n    return (\r\n        <nav className=\"flex-centered mt4 ml4 mr4\">\r\n            <Logo />\r\n            <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pointer'>Sign Out</p>\r\n        </nav>\r\n    );\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"flex-centered mt4 ml4\">\r\n                    <Logo/>\r\n                    <div className=\"flex-centered mr4\">\r\n                        <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                        <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer' >Register</p>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            signInEmail:'',\r\n            signInPassword:'',\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://protected-fortress-04464.herokuapp.com/signin', {\r\n            method:'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"center mw5 mw6-ns br3 shadow-4 ba b--black-10 mv4\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                            Email\r\n                            </label>\r\n                            <input\r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\"\r\n                            type=\"email\"\r\n                            name=\"email-address\"\r\n                            id=\"email-address\"\r\n                            onChange={this.onEmailChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                            Password\r\n                            </label>\r\n                            <input\r\n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            onChange={this.onPasswordChange}\r\n                            />\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"button\"\r\n                                defaultValue=\"Sign in\"\r\n                                onClick={this.onSubmitSignIn}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <p>or</p>\r\n                            <input\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"button\"\r\n                                defaultValue=\"Register\"\r\n                                onClick={() => onRouteChange('register')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            registerName: '',\r\n            registerEmail: '',\r\n            registerPassword: '',\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({registerName: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({registerEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({registerPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        fetch('https://protected-fortress-04464.herokuapp.com/register', {\r\n            method:'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                name: this.state.registerName,\r\n                email: this.state.registerEmail,\r\n                password: this.state.registerPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"center mw5 mw6-ns br3 shadow-4 ba b--black-10 mv4\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                            Name\r\n                            </label>\r\n                            <input\r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            onChange={this.onNameChange}\r\n                            />\r\n                        </div><div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                            Email\r\n                            </label>\r\n                            <input\r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\"\r\n                            type=\"email\"\r\n                            name=\"email-address\"\r\n                            id=\"email-address\"\r\n                            onChange={this.onEmailChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                            Password\r\n                            </label>\r\n                            <input\r\n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            onChange={this.onPasswordChange}\r\n                            />\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                        <input\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"button\"\r\n                            defaultValue=\"Register\"\r\n                            onClick={this.onSubmitRegister}\r\n                            onKeyPress={this.handlePressEnter}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nconst Rank = ({ name, entries}) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${name}, your current rank is...`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;\r\n","import React from 'react';\r\nimport './imageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onPhotoSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className='f3 tc'>\r\n                {\"This Magic application will detect faces in your pictures. Give it a try\"}\r\n            </p>\r\n            <div className=\"flex-center\">\r\n            <div className=\"form flex-center pa4 br3 shadow-5\">\r\n                <input className=\"f4 pa2 w-70 center\" type=\"text\" onChange={onInputChange}/>\r\n                <button\r\n                    className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\" \r\n                    onClick={onPhotoSubmit}\r\n                >Detect</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './faceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className=\"flex-center ma\">\r\n        <div className=\"absolute mt2\">\r\n            <img id='inputImage' src={imageUrl} alt=\"\" width='500px' height='auto'/>\r\n            <div className=\"bounding-box\" style={{top:box.topRow, right:box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component }from \"react\";\nimport \"./App.css\";\nimport Particles from 'react-particles-js';\nimport Navigation from \"./components/Navigation/Navigation\";\nimport SignIn from \"./components/SignIn/SignIn\"\nimport Register from \"./components/Register/Register\"\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\n\nconst particlesParams = { \n  \"particles\": {\n      \"number\": {\n          \"value\": 40,\n      },\n      \"size\": {\n          \"value\": 5\n      }\n  }\n};\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined:''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    \n    const image = document.getElementById('inputImage');const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    \n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onPhotoSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://protected-fortress-04464.herokuapp.com/imageurl', {\n      method:'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if (response) {\n        fetch('https://protected-fortress-04464.herokuapp.com/image', {\n          method:'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count}))\n        })\n        .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    // .catch( err => console.log(err));\n  }\n  \n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState( initialState )\n    } else if (route === 'home'){\n      this.setState({isSignedIn:true});\n    }\n    this.setState({route: route});\n    \n    console.log(route);\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, box, route } = this.state;\n    return (\n      <div className=\"App\">\n      <Particles \n        className=\"particles\"\n        params={particlesParams}\n      />\n      <Navigation\n        onRouteChange={this.onRouteChange}\n        isSignedIn={isSignedIn}\n        />\n      { route === 'home'\n        ? <React.Fragment>\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onPhotoSubmit={this.onPhotoSubmit}\n              />\n            <FaceRecognition\n              imageUrl={imageUrl}\n              box={box}\n            />\n        </React.Fragment>\n        : (\n          this.state.route === 'signin' || this.state.route === 'signout'\n          ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        )\n      }\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/emoji.fdd3106c.png\";"],"sourceRoot":""}